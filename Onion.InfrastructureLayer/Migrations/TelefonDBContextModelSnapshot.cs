// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Onion.InfrastructureLayer;

#nullable disable

namespace Onion.InfrastructureLayer.Migrations
{
    [DbContext(typeof(TelefonDBContext))]
    partial class TelefonDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.IsletimSistemi", b =>
                {
                    b.Property<int>("IsletimSistemiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IsletimSistemiID"));

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IsletimSistemiAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.HasKey("IsletimSistemiID");

                    b.ToTable("IsletimSistemleri");

                    b.HasData(
                        new
                        {
                            IsletimSistemiID = 1,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsletimSistemiAdi = "IOS",
                            KayitDurumu = 1
                        },
                        new
                        {
                            IsletimSistemiID = 2,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsletimSistemiAdi = "Android",
                            KayitDurumu = 1
                        },
                        new
                        {
                            IsletimSistemiID = 3,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsletimSistemiAdi = "HarmonyOS",
                            KayitDurumu = 1
                        });
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Marka", b =>
                {
                    b.Property<int>("MarkaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarkaID"));

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("int");

                    b.Property<string>("MarkaAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.HasKey("MarkaID");

                    b.ToTable("Markalar");

                    b.HasData(
                        new
                        {
                            MarkaID = 1,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaAdi = "Iphone"
                        },
                        new
                        {
                            MarkaID = 2,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaAdi = "Samsung"
                        },
                        new
                        {
                            MarkaID = 3,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaAdi = "Huawei"
                        },
                        new
                        {
                            MarkaID = 4,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaAdi = "Nothing"
                        });
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Model", b =>
                {
                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelID"));

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("int");

                    b.Property<int>("MarkaID")
                        .HasColumnType("int");

                    b.Property<string>("ModelAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.HasKey("ModelID");

                    b.HasIndex("MarkaID");

                    b.ToTable("Modeller");

                    b.HasData(
                        new
                        {
                            ModelID = 1,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 1,
                            ModelAdi = "Iphone16"
                        },
                        new
                        {
                            ModelID = 2,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 1,
                            ModelAdi = "Iphone16 Pro"
                        },
                        new
                        {
                            ModelID = 3,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 1,
                            ModelAdi = "Iphone15"
                        },
                        new
                        {
                            ModelID = 4,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 2,
                            ModelAdi = "S24"
                        },
                        new
                        {
                            ModelID = 5,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 2,
                            ModelAdi = "S24 Ultra"
                        },
                        new
                        {
                            ModelID = 6,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 3,
                            ModelAdi = "Mate"
                        },
                        new
                        {
                            ModelID = 7,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 3,
                            ModelAdi = "GR3"
                        },
                        new
                        {
                            ModelID = 8,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 4,
                            ModelAdi = "Phone (2A) Plus"
                        },
                        new
                        {
                            ModelID = 9,
                            EklenmeTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KayitDurumu = 1,
                            MarkaID = 4,
                            ModelAdi = "Phone (1)"
                        });
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "198c8793-5b7b-4b42-bcb2-0dfc332545c6",
                            Name = "Admin",
                            NormalizedName = "ADMİN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "eb7f818b-046a-406a-9179-375bc2407396",
                            Name = "Uye",
                            NormalizedName = "UYE"
                        });
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Sepet", b =>
                {
                    b.Property<int>("SepetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SepetID"));

                    b.Property<short>("Adet")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TelefonID")
                        .HasColumnType("int");

                    b.Property<int>("UyeID")
                        .HasColumnType("int");

                    b.HasKey("SepetID");

                    b.HasIndex("TelefonID");

                    b.HasIndex("UyeID");

                    b.ToTable("Sepetler");
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Telefon", b =>
                {
                    b.Property<int>("TelefonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefonID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("CiftSim")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("money");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IsletimSistemiID")
                        .HasColumnType("int");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("int");

                    b.Property<int>("MarkaID")
                        .HasColumnType("int");

                    b.Property<int?>("ModelID")
                        .HasColumnType("int");

                    b.Property<string>("Resim")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasDefaultValue("telefon.png");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<short>("Stok")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("TelefonID");

                    b.HasIndex("IsletimSistemiID");

                    b.HasIndex("MarkaID");

                    b.HasIndex("ModelID");

                    b.ToTable("Telefonlar");
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Uye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoyAd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Ad = "Super",
                            Adres = "host",
                            ConcurrencyStamp = "45bb2efe-6055-41f5-a159-31b73801539c",
                            Email = "super@deneme.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPER@DENEME.COM",
                            NormalizedUserName = "SPRUSER",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7f14965c-6dcc-4120-ad4a-0391d43eaa5e",
                            SoyAd = "User",
                            TwoFactorEnabled = false,
                            UserName = "sprUser"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Onion.CoreLayer.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Onion.CoreLayer.Models.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Onion.CoreLayer.Models.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Onion.CoreLayer.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onion.CoreLayer.Models.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Onion.CoreLayer.Models.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Model", b =>
                {
                    b.HasOne("Onion.CoreLayer.Models.Marka", "Marka")
                        .WithMany()
                        .HasForeignKey("MarkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Sepet", b =>
                {
                    b.HasOne("Onion.CoreLayer.Models.Telefon", "Telefon")
                        .WithMany("SepetdekiTelefonlar")
                        .HasForeignKey("TelefonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onion.CoreLayer.Models.Uye", "Uye")
                        .WithMany("SepetdekiTelefonlar")
                        .HasForeignKey("UyeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Telefon");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Telefon", b =>
                {
                    b.HasOne("Onion.CoreLayer.Models.IsletimSistemi", "IsletimSistemi")
                        .WithMany("Telefonlar")
                        .HasForeignKey("IsletimSistemiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onion.CoreLayer.Models.Marka", "Marka")
                        .WithMany()
                        .HasForeignKey("MarkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onion.CoreLayer.Models.Model", "Model")
                        .WithMany("Telefonlar")
                        .HasForeignKey("ModelID");

                    b.Navigation("IsletimSistemi");

                    b.Navigation("Marka");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.IsletimSistemi", b =>
                {
                    b.Navigation("Telefonlar");
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Model", b =>
                {
                    b.Navigation("Telefonlar");
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Telefon", b =>
                {
                    b.Navigation("SepetdekiTelefonlar");
                });

            modelBuilder.Entity("Onion.CoreLayer.Models.Uye", b =>
                {
                    b.Navigation("SepetdekiTelefonlar");
                });
#pragma warning restore 612, 618
        }
    }
}
